/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.39
 * Generated at: 2013-06-16 03:20:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.site.service.pager;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.commons.lang3.math.NumberUtils;
import java.util.List;
import jease.cms.domain.Content;

public final class Pager_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	String pagerScope = (String) request.getAttribute("Pager.Scope");
	String pagerRenderer = (String) request.getAttribute("Pager.Renderer");
	List<Content> contents = (List<Content>) request.getAttribute("Pager.Contents");

	int pagerSize = NumberUtils.toInt(request.getParameter(pagerScope + "Size"), 10);
	int pagerIndex = NumberUtils.toInt(request.getParameter(pagerScope + "Index"), 0);
	String pagerURL = "?" + request.getQueryString().replaceAll("&" + pagerScope + "Index=[^&]*", "");

      out.write("<div class=\"");
      out.print( pagerScope );
      out.write("-contents\">\n");

	Content node = (Content) request.getAttribute("Node");
	for (int i = pagerIndex; i < Math.min(pagerIndex + pagerSize, contents.size()); i++) {
		request.setAttribute("Node", contents.get(i)); 
		pageContext.include(pagerRenderer);
	}
	request.setAttribute("Node", node);

      out.write("</div>\n");
 if (contents.size() > pagerSize) { 
      out.write("<p class=\"");
      out.print( pagerScope );
      out.write("-pager\">\n");
      out.write("\t");
 if (pagerIndex - pagerSize >= 0) { 
      out.write("<a href=\"");
      out.print(pagerURL);
      out.write('&');
      out.print(pagerScope);
      out.write("Index=");
      out.print(pagerIndex - pagerSize);
      out.write("\">&laquo;&laquo;</a>\n");
      out.write("\t");
 } 
 for (int i = 0; i < contents.size(); i += pagerSize) { 
      out.write("<a href=\"");
      out.print(pagerURL);
      out.write('&');
      out.print(pagerScope);
      out.write("Index=");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print( i == pagerIndex ? "<b>" + ((i / pagerSize) + 1) + "</b>" : (i / pagerSize) + 1);
      out.write("</a>\n");
      out.write("\t");
 } 
 if (pagerIndex + pagerSize <= contents.size()) { 
      out.write("<a href=\"");
      out.print(pagerURL);
      out.write('&');
      out.print(pagerScope);
      out.write("Index=");
      out.print(pagerIndex + pagerSize);
      out.write("\">&raquo;&raquo;</a>\n");
      out.write("\t");
 } 
      out.write("</p>\n");
 } 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
