/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.39
 * Generated at: 2013-06-16 03:57:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.site.domain;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.commons.io.FileUtils;
import jfix.util.Images;
import jease.cms.domain.Media;
import jease.site.Streams;

public final class Media_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	Media media = (Media) request.getAttribute("Node");
	String mediaPath = media.getPath();
	if (session.getAttribute(media.getPath()) != null) {
		media = (Media) session.getAttribute(media.getPath());
	}
	String contentType = media.getContentType();
	if (request.getParameter("file") != null) {
		Streams.write(request, response, media.getFile(), contentType);
		return;
	}

      out.write("<div class=\"Media\">\n");
      out.write("<h1 class=\"Title\">");
      out.print(media.getTitle());
      out.write("</h1>\n");
 if (Images.isBrowserCompatible(contentType)) { 
      out.write("<a class=\"Image\" href=\"");
      out.print(request.getContextPath() );
      out.print(mediaPath);
      out.write("?file&");
      out.print(contentType.replace("/",".") );
      out.write("\"><img src=\"");
      out.print(request.getContextPath() );
      out.print(mediaPath);
      out.write("?file\" alt=\"");
      out.print(media.getTitle());
      out.write("\" title=\"");
      out.print(media.getTitle());
      out.write("\" /></a>\n");
 } else if (contentType.equals("video/x-flv") || contentType.equals("video/mp4") || contentType.equals("video/mpeg")) { 
      out.write("<object class=\"Video\" data=\"");
      out.print( request.getContextPath() );
      out.write("/site/service/videoplayer/flowplayer.swf\" type=\"application/x-shockwave-flash\">\n");
      out.write("\t<param name=\"movie\" value=\"");
      out.print( request.getContextPath() );
      out.write("/site/service/videoplayer/flowplayer.swf\" />\n");
      out.write("\t<param name=\"allowfullscreen\" value=\"true\" />\n");
      out.write("\t<param name=\"flashvars\" value=\"config={'clip':{'url':'");
      out.print(request.getContextPath() );
      out.print(mediaPath);
      out.write("?file', 'autoPlay':false, 'autoBuffering':true}}\" />\n");
      out.write("</object>\n");
 } else if (contentType.equals("audio/mp3") ||contentType.equals("audio/mpeg")) { 
      out.write("<object class=\"Audio\" data=\"");
      out.print( request.getContextPath() );
      out.write("/site/service/videoplayer/flowplayer.swf\" type=\"application/x-shockwave-flash\">\n");
      out.write("\t<param name=\"movie\" value=\"");
      out.print( request.getContextPath() );
      out.write("/site/service/videoplayer/flowplayer.swf\" />\n");
      out.write("\t<param name=\"flashvars\" value=\"config={'clip':{'url':'");
      out.print(request.getContextPath() );
      out.print(mediaPath);
      out.write("?file', 'autoPlay':false}, 'plugins':{'controls': {'fullscreen': false, 'autoHide': false}}}\" />\n");
      out.write("</object>\n");
 } else if (contentType.equals("application/x-shockwave-flash")) { 
      out.write("<object class=\"Flash\" data=\"");
      out.print(request.getContextPath() );
      out.print(mediaPath);
      out.write("?file\" type=\"application/x-shockwave-flash\">\n");
      out.write(" <param name=\"movie\" value=\"");
      out.print(request.getContextPath() );
      out.print(mediaPath);
      out.write("?file\" />\n");
      out.write("</object>\n");
 } else if (contentType.startsWith("text/html")) { 
      out.write("<div class=\"Html\">");
      out.print(FileUtils.readFileToString(media.getFile()));
      out.write("</div>\n");
 } else if (contentType.startsWith("text/")) { 
      out.write("<pre class=\"Text\">");
      out.print(FileUtils.readFileToString(media.getFile()));
      out.write("</pre>\n");
 } else { 
      out.write("<iframe class=\"File\" src=\"");
      out.print(request.getContextPath() );
      out.print(mediaPath);
      out.write("?file\"></iframe>\n");
 } 
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
